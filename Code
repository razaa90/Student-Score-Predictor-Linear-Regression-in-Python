# Linear Regression Project: Predict Student Scores from Study Hours
# Author: Ahmad Hassan Raza

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Step 1: Load dataset from CSV
# Make a CSV file named 'student_scores.csv' with columns: Hours,Scores
df = pd.read_csv('student_scores.csv')

# Step 2: Explore data
print("First 5 rows of dataset:")
print(df.head())

# Step 3: Split dataset into features and target
X = df[['Hours']]  # Feature
y = df['Scores']   # Target

# Step 4: Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Create and train linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Predict test set
y_pred = model.predict(X_test)

# Step 7: Evaluate model
mse = mean_squared_error(y_test, y_pred)
print("\nMean Squared Error on test data:", mse)
print("Predictions for test set:", y_pred)

# Step 8: Plot regression line with data points
plt.scatter(X, y, color='blue', label='Actual Scores')
plt.plot(X, model.predict(X), color='red', label='Regression Line')
plt.title('Hours Studied vs Scores')
plt.xlabel('Hours Studied')
plt.ylabel('Scores')
plt.legend()
plt.show()

# Step 9: Predict for a custom input
hours = float(input("\nEnter hours studied: "))
predicted_score = model.predict([[hours]])
print(f"Predicted Score for {hours} hours: {predicted_score[0]:.2f}")
